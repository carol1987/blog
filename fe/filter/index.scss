@charset "utf-8";

$width: 240px;
$margin: 10px;

#box {
  text-align: center;
  font-size: 0;
}

.helper, .item {
  display: inline-block;
}

.item {
  width: $width;
  margin: $margin;
  font-size: 16px;
  vertical-align: top;
  img {
    width: 100%;
  }
  h1 {
    margin: 2px 0 10px;
    font-size: 1.4em;
    font-weight: normal;
    text-transform: capitalize;
  }
}

.item-x {
  h1:after {
    content: '(' attr(data-id) ')';
  }
}

.item-z .demo {
  position: relative;
  &:after {
    pointer-events: none;
    content: '';
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background-color: hsla(270, 50%, 50%, 0.75);
  }
}

.helper {
  width: $width;
  margin: 0 $margin;
}

@mixin prefix($p, $v) {
  @each $prefix in ('-webkit-', '-moz-', '-ms-', '-o-', '') {
    #{$prefix + $p}: $v;
  }
}

@each $key, $value in (
  // 模糊
  blur: 2px,
  // 灰度
  grayscale: 0.75,
  // 透明度
  opacity: 0.5,
  // 复古风
  sepia: 0.5,
  // 饱和度
  saturate: 2,
  //色相翻转
  hue-rotate: 45deg,
  // 反色
  invert: 0.8,
  // 亮度
  brightness: 1.3,
  // 对比度
  contrast: 0.5,
  // 阴影
  drop-shadow: 10px 10px 10px #000
) {
  ##{$key} img {
    @include prefix(filter, $key + unquote( "(#{$value})" ));
  }
}

@each $key in (
  normal,
  multiply,
  screen,
  overlay,
  darken,
  lighten,
  color-dodge,
  color-burn,
  hard-light,
  soft-light,
  difference,
  exclusion,
  hue,
  saturation,
  color,
  luminosity,
  initial,
  inherit,
  unset
) {
  ##{$key} .demo:after {
    @include prefix(mix-blend-mode, $key);
  }
}
